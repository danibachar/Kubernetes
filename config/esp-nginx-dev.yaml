kind: ConfigMap
apiVersion: v1
metadata:
  name: esp-nginx
  namespace: dev
  labels:
    environment: dev
    tier: backend
    component: app-server
data:
  nginx.conf: |-
    # Copyright 2016 Google Inc. All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    daemon off;

    user nginx nginx;

    worker_processes 1;

    # Logging to stderr enables better integration with Docker and GKE/Kubernetes.
    error_log stderr warn;

    events {
      worker_connections 4096;
      accept_mutex off; # set to 'on' if nginx worker_processes > 1
    }

    http {
      include /etc/nginx/mime.types;
      server_tokens off;
      client_max_body_size    100m;
      # Timeouts
      # See - https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340
      client_body_timeout     400;
      proxy_connect_timeout   400;
      proxy_send_timeout      400;
      proxy_read_timeout      400;
      send_timeout            400;
      keepalive_timeout       400;
      keepalive_requests      10000;
      # Buffering
      proxy_request_buffering off;
      proxy_buffering off;


      upstream app_server {
        server localhost:8081;
        keepalive 650;
      }

      endpoints {
        metadata_server;
      }

      server {
        # Running port
        listen 8080;

        # Logging to stdout enables better integration with Docker and GKE/Kubernetes.
        access_log /dev/stdout;

        # Return correct responses for Google/Kubernetes health checks
        location = / {
          return 200 'OK';
          add_header Content-Type text/plain;
        }
        location = /health {
          return 200 'OK';
          add_header Content-Type text/plain;
        }

        # Removed Endpoints support - we need to decide if we want this or not
        # location / {
        #   # Begin Endpoints v2 Support
        #    endpoints {
        #     on;
        #     api /etc/nginx/endpoints/service.json;
        #    }
        #   # End Endpoints v2 Support

          proxy_pass http://app_server;
          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Host $server_name;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Google-Real-IP $remote_addr;

          # 86400 seconds (24 hours) is the maximum a server is allowed.
          proxy_send_timeout 86400s;
          proxy_read_timeout 86400s;

          # Enable gzip compression
          gzip on;
          gzip_proxied any;
          gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        }

        include /var/lib/nginx/extra/*.conf;
      }

      server {
        # expose /nginx_status but on a different port to avoid
        # external visibility / conflicts with the app.
        listen 8090;
        location /nginx_status {
          stub_status on;
          access_log off;
        }
        location / {
          root /dev/null;
        }
      }
    }
